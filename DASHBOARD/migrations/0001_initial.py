# Generated by Django 5.1 on 2025-01-04 18:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=150)),
                ('director_name', models.CharField(blank=True, max_length=150)),
                ('status', models.CharField(choices=[('SARL', 'SARL'), ('SA', 'SA'), ('SCS/SCA', 'SCS/SCA'), ('SNC', 'SNC'), ('SAS', 'SAS'), ('Autres', 'Autres')], default='SARL', max_length=10)),
                ('activity_sector', models.CharField(choices=[('IND-FAB', 'Industrie et Fabrication'), ('TECH-INNOV', 'Technologies et Innovation'), ('SANTE-BE', 'Santé et Bien-être'), ('CREA-CUL', 'Creation et Culture'), ('ENV-AGR', 'Environnement et Agriculture'), ('COM-DIST', 'Commerce et Distribution'), ('TOUR-HOT', 'Tourisme et Hôtellerie'), ('EDUC-FORM', 'Education et Formation'), ('FIN', 'Finances')], max_length=15)),
                ('localisation', models.CharField(help_text='(Au format : Pays/Ville/Quartier/Rue)', max_length=200, validators=[django.core.validators.RegexValidator('^([A-Za-zÀ-ÿ\\s-]{2,40})/([A-Za-zÀ-ÿ\\s-]{2,40})/([A-Za-zÀ-ÿ0-9\\s-]{2,40})/([A-Za-zÀ-ÿ0-9\\s-]{2,80})$')])),
                ('nbr_employees', models.PositiveBigIntegerField()),
                ('tel_contact', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[1-9]\\d{1,14}$', 'Numéro de téléphone invalide')])),
                ('email_contact', models.EmailField(max_length=150)),
                ('birth_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('added_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Convention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('C-SA', 'Convention selon le secteur d’activité'), ('C-IAS19', 'Convention selon la norme IAS 19')], max_length=150)),
                ('activity_sector', models.CharField(choices=[('IND-FAB', 'Industrie et Fabrication'), ('TECH-INNOV', 'Technologies et Innovation'), ('SANTE-BE', 'Santé et Bien-être'), ('CREA-CUL', 'Creation et Culture'), ('ENV-AGR', 'Environnement et Agriculture'), ('COM-DIST', 'Commerce et Distribution'), ('TOUR-HOT', 'Tourisme et Hôtellerie'), ('EDUC-FORM', 'Education et Formation'), ('FIN', 'Finances')], max_length=15, unique=True)),
                ('compute_parameters_detail', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('added_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('age', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(200)])),
                ('identifier', models.CharField(help_text='(Une chaine de 10 caracteres pouvant etre uniquement des lettres ou des chiffres)', max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]{10}$')])),
                ('seniority', models.PositiveSmallIntegerField()),
                ('base_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('socio_professional_category', models.CharField(choices=[('SG', 'Stagiaire'), ('ASC', 'Assistant/Collaborateur'), ('OV', 'Ouvrier'), ('TEC', 'Technicien'), ('CI', 'Cadre Intermediaire'), ('CS', 'Cadre Superieur'), ('DIR', 'Dirrigeant'), ('FR', 'Freelance'), ('FP', 'Fonctionnaire(secteur publique uniquement)'), ('AT', 'Autres')], max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('added_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DASHBOARD.company')),
                ('convention', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='DASHBOARD.convention')),
            ],
        ),
        migrations.CreateModel(
            name='SettingConvention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_seniority', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MaxValueValidator(12)])),
                ('base_compensation_rate', models.DecimalField(decimal_places=2, default=0.2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('years_gap', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MaxValueValidator(8)])),
                ('add_compensation_rate', models.DecimalField(decimal_places=2, default=0.05, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0.03, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('wage_inflation_rate', models.DecimalField(decimal_places=2, default=0.05, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employee_retirement_age', models.PositiveSmallIntegerField(default=60, validators=[django.core.validators.MaxValueValidator(65)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('added_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('convention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DASHBOARD.convention')),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CRE', 'Créé'), ('VAL', 'Validé'), ('SIM', 'Simulé'), ('ABN', 'Abandonné'), ('SUP', 'Supprimé')], max_length=5)),
                ('ifc_result', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('added_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DASHBOARD.company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DASHBOARD.employee')),
                ('settingconvention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DASHBOARD.settingconvention')),
            ],
        ),
    ]
